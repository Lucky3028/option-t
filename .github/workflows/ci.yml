name: CI
on:
    push:
        branches:
            # To supress this action launches twice on conditions which fulfills all of follwings:
            #   - On pushing a new change to a branch.
            #   - The branch is opening a pull request
            #   - The branch is origin repository.
            # We limits for push events for `main`.
            # By [this link](https://github.community/t5/GitHub-Actions/How-to-trigger-a-single-build-on-either-push-or-pull-request/m-p/32469#M1144),
            # we seem that we need to add `branches` for `pull_request` event.
            # However, actually, we don't have to limit a target branch for pull requests to suppress this problem.
            # Even if we don't specify it, it triggers this action that pushing to the branch for pull request.
            - main
            # These branches are used by bors-ng.
            - staging
            - trying
        tags-ignore:
            # Ignore for release/
            - v*.*.*
    pull_request:

# see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    install_dependencies:
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    # We think that we don't have to specify all versions which we'd like to test
                    # because almost npm packages cares about platform but don't care about node's version.
                    - 16

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

    format_check:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make format_check -j
              env:
                  CI: true

    lint:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make lint -j
              env:
                  CI: true

    build:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make build -j
              env:
                  CI: true

    unittest:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16
                    - 18

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make test_unittest -j
              env:
                  CI: true

    test_distribution_contain_all:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16
                    - 18

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make test_distribution_contain_all -j
              env:
                  CI: true

    test_esmodule_path_rewrite:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16
                    - 18

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make test_esmodule_path_rewrite -j
              env:
                  CI: true

    test_package_install:
        needs: [install_dependencies]
        runs-on: ubuntu-latest
        container: node:${{ matrix.node-version }}-bullseye

        strategy:
            matrix:
                node-version:
                    - 16
                    - 18

        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prepare_ci

            - run: make test_package_install -j
              env:
                  CI: true
